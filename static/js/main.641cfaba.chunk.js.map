{"version":3,"sources":["components/Login.js","components/Register.js","components/Reservation.js","components/Reserve.js","components/App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","showEmailError","showLoginError","isLoading","handleChangeEmail","e","text","target","value","setState","handleChangePassword","handleSubmit","preventDefault","test","formData","FormData","body","forEach","property","props","startLoading","finishLoading","saveUserDetails","remoteAPI","localAPI","axios","post","then","res","console","log","status","data","userId","fullName","token","catch","error","this","className","onSubmit","type","name","placeholder","onChange","disabled","role","React","Component","Register","mobile","showEmailAlreadyExists","showRegistrationFail","showRegistrationSuccessful","redirctToLogin","handleChangeFullName","handleChangeMobile","that","setTimeout","toString","includes","history","push","withRouter","Reservation","style","Date","date","toLocaleDateString","meal","notes","Reserve","reserveDate","showDateError","notesLength","showReservationSuccess","showReservationFail","reservations","fetchUserReservations","get","headers","handleChangeMeal","selectedMeal","handleChangeNotes","substring","length","handleDateChange","now","setHours","selected","map","r","key","id","App","logout","height","color","onRef","ref","LoadingBar","basename","to","path","exact","render","continuousStart","complete","href","onClick","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.641cfaba.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      showEmailError: false,\r\n      showLoginError: false,\r\n      isLoading: false\r\n    };\r\n\r\n    handleChangeEmail = e => {\r\n      const text = e.target.value;\r\n  \r\n      this.setState(() => ({\r\n        email: text\r\n      }));\r\n    };\r\n\r\n    handleChangePassword = e => {\r\n      const text = e.target.value;\r\n  \r\n      this.setState(() => ({\r\n        password: text\r\n      }));\r\n    };\r\n\r\n    handleSubmit = (e) =>{\r\n      e.preventDefault()\r\n      const {email } = this.state;\r\n      const reg = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n      const validEmail= reg.test(email);\r\n      if(validEmail){\r\n        this.setState(() => ({\r\n          showEmailError: false,\r\n        }));\r\n\r\n        const formData = new FormData(e.target)\r\n        const body = {}\r\n        formData.forEach((value, property) => body[property] = value)\r\n        const that = this;\r\n\r\n        const { startLoading, finishLoading, saveUserDetails, localAPI, remoteAPI } = this.props;\r\n\r\n        startLoading();\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n\r\n        axios.post(`${remoteAPI}/auth`, body)\r\n        .then(res => {\r\n          console.log(res.status);\r\n          saveUserDetails(res.data.userId, res.data.fullName, res.data.token)\r\n          finishLoading();\r\n          this.setState({\r\n            showEmailError: false,\r\n            showLoginError: false,\r\n            isLoading: false\r\n          });\r\n        })\r\n        .catch(error => { \r\n          console.log(\"error :\"+error);\r\n          this.setState(() => ({\r\n            showEmailError: false,\r\n            showLoginError: true,\r\n            isLoading: false\r\n          }));\r\n          finishLoading();\r\n        })\r\n      }\r\n      else{\r\n        this.setState(() => ({\r\n          showEmailError: true,\r\n          showLoginError: false,\r\n          email: ''\r\n        }));\r\n      }\r\n    }\r\n    render(){\r\n\r\n      const { email, password, showEmailError, showLoginError, isLoading } = this.state;\r\n\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <br/>\r\n            <h1>Login</h1>\r\n            <br/>\r\n            <form\r\n                onSubmit={this.handleSubmit}>\r\n                    <div>\r\n                        <div className='form-group'>\r\n                          <label>Email</label>\r\n                          <input type='text' className='form-control' name='email' placeholder='someone@domain.com' value= {email} onChange={this.handleChangeEmail} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                          <label>Password</label>\r\n                          <input type='password' className='form-control' name='password' placeholder='password' value= {password} onChange={this.handleChangePassword} />\r\n                        </div>\r\n                        <button className='btn btn-primary'\r\n                        disabled={email === \"\" || password === \"\" || isLoading===true}>Login</button>\r\n                    </div>\r\n            </form>\r\n            <br/>\r\n            {showEmailError=== false ? '': (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Please enter a valid email\r\n            </div>\r\n            )}\r\n            {showLoginError=== false ? '': (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              email/password is not correct\r\n          </div>\r\n            )}\r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n  \r\n  export default Login;","import React from 'react';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n      fullName: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      password: \"\",\r\n      showEmailError: false,\r\n      showEmailAlreadyExists: false,\r\n      showRegistrationFail: false,\r\n      showRegistrationSuccessful: false,\r\n      redirctToLogin: false,\r\n      isLoading: false\r\n    };\r\n\r\n    handleChangeFullName = e => {\r\n      const text = e.target.value;\r\n  \r\n      this.setState(() => ({\r\n        fullName: text\r\n      }));\r\n    };\r\n\r\n    handleChangeEmail = e => {\r\n      const text = e.target.value;\r\n\r\n      this.setState(() => ({\r\n        email: text\r\n      }));\r\n    };\r\n\r\n    handleChangeMobile = e => {\r\n      const text = e.target.value;\r\n\r\n      if(/^\\d+$/.test(text)) {\r\n        //proceed with rest of code\r\n        this.setState(() => ({\r\n          mobile: text\r\n        }));\r\n       }\r\n    };\r\n\r\n    handleChangePassword = e => {\r\n      const text = e.target.value;\r\n  \r\n      this.setState(() => ({\r\n        password: text\r\n      }));\r\n    };\r\n\r\n    handleSubmit = (e) =>{\r\n      e.preventDefault()\r\n\r\n      const {email } = this.state;\r\n      const reg = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n      const validEmail= reg.test(email);\r\n      if(validEmail){\r\n        this.setState(() => ({\r\n          showEmailError: false,\r\n        }));\r\n        \r\n        const formData = new FormData(e.target)\r\n        const body = {}\r\n        formData.forEach((value, property) => body[property] = value)\r\n        const that = this;\r\n\r\n        const { startLoading, finishLoading, localAPI, remoteAPI } = this.props;\r\n\r\n        startLoading();\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n\r\n        axios.post(`${remoteAPI}/auth/register`, body)\r\n        .then(res => {\r\n          console.log(res.status);\r\n\r\n          this.setState({\r\n            showRegistrationFail: false,\r\n            showEmailAlreadyExists: false,\r\n            showEmailError: false,\r\n            showRegistrationSuccessful: true,\r\n            isLoading: false\r\n          });\r\n\r\n          that.props.finishLoading();\r\n\r\n          setTimeout(function () {\r\n            // redirect to login\r\n            that.setState(() => ({\r\n              redirctToLogin: true\r\n            }));\r\n \r\n        }, 1000);\r\n        })\r\n        .catch(error => { \r\n          console.log(\"error :\"+error);\r\n\r\n          // 406 error:\r\n          if(error.toString().includes('406')){\r\n            this.setState({\r\n              showRegistrationFail: false,\r\n              showEmailAlreadyExists: true,\r\n              showEmailError: false,\r\n              showRegistrationSuccessful: false,\r\n              isLoading: false\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              showRegistrationFail: true,\r\n              showEmailAlreadyExists: false,\r\n              showEmailError: false,\r\n              showRegistrationSuccessful: false,\r\n              isLoading: false\r\n            });\r\n          }\r\n          finishLoading();\r\n        })\r\n      }\r\n      else{\r\n        this.setState(() => ({\r\n          showEmailError: true,\r\n          showRegistrationSuccessful: false,\r\n          showEmailAlreadyExists: false,\r\n          showRegistrationFail: false,\r\n          email: ''\r\n        }));\r\n      }\r\n  }\r\n\r\n    render(){\r\n\r\n      const { fullName, email, mobile, password, showEmailError, showEmailAlreadyExists,\r\n         showRegistrationFail, showRegistrationSuccessful, redirctToLogin, isLoading } = this.state;\r\n\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <br/><h1>Register</h1><br/>\r\n            <form\r\n                onSubmit={this.handleSubmit}>\r\n                    <div>\r\n                        <div className='form-group'>\r\n                          <label>Fullname</label>\r\n                          <input type='text' className='form-control' name='fullName' placeholder='Rami' value={fullName}\r\n                          onChange={this.handleChangeFullName} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                          <label>Email</label>\r\n                          <input type='text' className='form-control' name='email' placeholder='someone@domain.com' value={email}\r\n                          onChange={this.handleChangeEmail} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                          <label>Mobile</label>\r\n                          <input type='text' className='form-control' name='mobile' placeholder='0599565705' value={mobile}\r\n                          onChange={this.handleChangeMobile} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                          <label>Password</label>\r\n                          <input type='password' className='form-control' name='password' placeholder='Password' value={password}\r\n                          onChange={this.handleChangePassword} />\r\n                        </div>\r\n                        <button className='btn btn-primary'\r\n                        disabled={fullName === \"\" || email === \"\" || mobile === \"\" || password === \"\" || isLoading===true}>Register</button>\r\n                    </div>\r\n            </form>\r\n            <br/>\r\n            {showEmailError=== false ? '': (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Please enter a valid email\r\n            </div>\r\n            )}\r\n            {showRegistrationFail=== false ? '': (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              User registration failed, please contact admin\r\n            </div>\r\n\r\n            )}\r\n            {showEmailAlreadyExists=== false ? '': (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Email already exists\r\n            </div>\r\n            )}\r\n            {showRegistrationSuccessful=== false ? '': (\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n              User registration is successful\r\n            </div>\r\n            )}\r\n            {redirctToLogin== false ? '' : this.props.history.push('/') }\r\n\r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n  \r\n  export default withRouter(Register);","import React from 'react';\r\n\r\nclass Reservation extends React.Component {\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"card text-center\" style={{\"color\" : \"black\", \"width\": \"400px\"}}>\r\n            <div className=\"card-header\">\r\n                Date: {new Date(this.props.date).toLocaleDateString(\"en-US\")}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Meal: {this.props.meal}</h5>\r\n              <p className=\"card-text\">Notes: {this.props.notes}</p>\r\n            </div>\r\n          </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Reservation;","import React from 'react';\r\nimport '../App.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nimport Reservation from './Reservation';\r\n\r\nclass Reserve extends React.Component {\r\n    state = {\r\n      meal: \"\",\r\n      notes: \"\",\r\n      reserveDate: \"\",\r\n      showDateError: false,\r\n      notesLength: 0,\r\n      showReservationSuccess: false,\r\n      showReservationFail: false,\r\n      isLoading: false,\r\n      reservations: []\r\n    };\r\n\r\n    \r\n    componentDidMount() {\r\n      this.fetchUserReservations();\r\n    }\r\n\r\n    fetchUserReservations = function(){\r\n      const { userId, token, localAPI, remoteAPI} = this.props;\r\n      axios.get(`${remoteAPI}/reserve/`+userId,{headers: {\r\n        'Authorization': \"Bearer \"+ token,\r\n        'Accept' : 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }})\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          reservations: res.data\r\n        });\r\n      })\r\n    }\r\n\r\n    handleChangeMeal = e => {\r\n      const selectedMeal = e.target.value;\r\n \r\n      this.setState(() => ({\r\n        meal: selectedMeal\r\n      }));\r\n    }\r\n\r\n    handleChangeNotes = e => {\r\n      const text = e.target.value;\r\n \r\n      this.setState(() => ({\r\n        notes: text.substring(0, 299),\r\n        notesLength: text.length\r\n      }));\r\n    }\r\n\r\n    handleDateChange = date => {\r\n      var now = new Date();\r\n      now.setHours(0,0,0,0);\r\n\r\n      if(date < now){\r\n        this.setState({\r\n          reserveDate: \"\",\r\n          showDateError: true\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n          reserveDate: date,\r\n          showDateError: false\r\n        });\r\n      }\r\n    };\r\n\r\n    handleSubmit = (e) =>{\r\n      e.preventDefault()\r\n\r\n      const formData = new FormData(e.target)\r\n      const body = {}\r\n      formData.forEach((value, property) => body[property] = value)\r\n      body.userId = this.props.userId;\r\nconsole.log(body);\r\n      const { startLoading, finishLoading, token, localAPI, remoteAPI} = this.props;\r\n\r\n      startLoading();\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n\r\n      axios.post(`${remoteAPI}/reserve`, body, {headers: {\r\n        'Authorization': \"Bearer \"+ token,\r\n        'Accept' : 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }})\r\n      .then(res => {\r\n        console.log(res.status);\r\n        finishLoading();\r\n        this.setState({\r\n          showReservationSuccess: true,\r\n          showReservationFail: false,\r\n          isLoading: false\r\n        });\r\n        this.fetchUserReservations();\r\n      })\r\n      .catch(error => { \r\n        console.log(\"error :\"+error);\r\n        finishLoading();\r\n        this.setState({\r\n          showReservationFail: true,\r\n          showReservationSuccess: false,\r\n          isLoading: false\r\n        });\r\n      })\r\n  }\r\n    render(){\r\n\r\n      const { meal, notes, reserveDate, showDateError, \r\n        notesLength, showReservationSuccess, showReservationFail, isLoading, reservations} = this.state;\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <br/><h1>Reserve</h1><br/>\r\n            <form\r\n                onSubmit={this.handleSubmit}>\r\n                    <div>\r\n                      <div className='form-group'>\r\n                        <label>Date</label>\r\n                        <DatePicker\r\n                          name=\"date\"\r\n                          className='form-control'\r\n                          selected={reserveDate}\r\n                          onChange={this.handleDateChange}\r\n                        />\r\n                      </div>\r\n                        <div className='form-group'>\r\n                          <label>Meal</label>\r\n                          <select name=\"meal\" className='form-control' value={meal} onChange={this.handleChangeMeal}>\r\n                            <option value=\"breakfast\">Breakfast</option>\r\n                            <option value=\"lunch\">Lunch</option>\r\n                            <option value=\"dinner\">Dinner</option>\r\n                            <option value=\"drink\">Drink</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                          <label>Notes</label>\r\n                          <textarea type='text' className='form-control' name='notes' placeholder='Enter your order details' value={notes}\r\n                          onChange={this.handleChangeNotes} />\r\n                        </div>\r\n                        <small>{300-notesLength} Remaining</small><br/>\r\n                        <button className='btn btn-primary'\r\n                        disabled={notes === \"\" || reserveDate === \"\" || isLoading=== true}>Reserve</button>\r\n                    </div>\r\n            </form>\r\n            <br/>\r\n            {showDateError=== false ? '': (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              Please enter a date in the future\r\n            </div>\r\n            )}\r\n            {showReservationFail=== false ? '': (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              An error has occured\r\n            </div>\r\n            )}\r\n            {showReservationSuccess=== false ? '': (\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n              Reservation request is complete\r\n            </div>\r\n            )}\r\n\r\n            <div>\r\n              <h3>History</h3>\r\n              <ul className='reserve-history'>\r\n              {reservations.length<= 0 ? 'Noting yet' :(\r\n                reservations.map(r => {\r\n                  return (\r\n                    <li key={r.id} style={{\"marginBottom\": \"30px\"}}>\r\n                      <Reservation\r\n                      date={r.date} meal={r.meal} notes={r.notes}\r\n                      />\r\n                    </li>\r\n                  );\r\n                })\r\n              )\r\n            }\r\n              </ul>\r\n            </div>\r\n          </header>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n  \r\n  export default Reserve;","import React, {Fragment} from 'react';\r\nimport LoadingBar from 'react-top-loading-bar';\r\nimport { HashRouter as Router, Route, NavLink, withRouter } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport Reserve from \"./Reserve\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    userId: \"\",\r\n    fullName: \"\",\r\n    token: \"\",\r\n    localAPI: \"https://localhost:44385/api\",\r\n    remoteAPI:\"https://resturantapi20200713042036.azurewebsites.net/api\"\r\n  };\r\n\r\n  logout = () => {\r\n    this.setState(() => ({\r\n      userId: \"\",\r\n      fullName: \"\"\r\n    }));\r\n  }\r\n\r\n  saveUserDetails= (id, name, token) =>{\r\n    this.setState(() => ({\r\n      userId: id,\r\n      fullName: name,\r\n      token: token\r\n    }));\r\n\r\n    console.log('token is: '+ this.state.token);\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <LoadingBar\r\n          height={3}\r\n          color='#1a1aff'\r\n          onRef={ref => (this.LoadingBar = ref)}\r\n        />\r\n          <Router basename=\"/\">\r\n          {this.state.userId === \"\" ? (\r\n            <Fragment>\r\n              <ul className=\"Nav-list\">\r\n                <li>\r\n                  <NavLink to ='/'>\r\n                        Login\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to ='/register'>\r\n                        Register\r\n                  </NavLink>\r\n                </li>\r\n              </ul> \r\n              <h3>Welcome to Resturant Reservation System V0.1</h3>\r\n              <Route path=\"/register\" exact render={props =><Register\r\n              localAPI = {this.state.localAPI} remoteAPI={this.state.remoteAPI}\r\n              startLoading={() => this.LoadingBar.continuousStart()}\r\n              finishLoading={() => this.LoadingBar.complete()} />} \r\n              />\r\n              \r\n              <Route path=\"/\" exact render={props => <Login \r\n                localAPI = {this.state.localAPI} remoteAPI={this.state.remoteAPI}\r\n                saveUserDetails = {this.saveUserDetails}\r\n                startLoading={() => this.LoadingBar.continuousStart()}\r\n              finishLoading={() => this.LoadingBar.complete()}/>} />\r\n            </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <ul className=\"Nav-list\">\r\n                    <li><a href='#'>Welcome {this.state.fullName}</a></li>\r\n                    <li><a href=\"#\" onClick={this.logout}>Logout</a></li>\r\n                  </ul> \r\n                  <Reserve token={this.state.token} userId={this.state.userId}\r\n                  localAPI = {this.state.localAPI} remoteAPI={this.state.remoteAPI}\r\n                  startLoading={() => this.LoadingBar.continuousStart()}\r\n                  finishLoading={() => this.LoadingBar.complete()} />\r\n                </Fragment>\r\n              )}\r\n          </Router>\r\n      </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}